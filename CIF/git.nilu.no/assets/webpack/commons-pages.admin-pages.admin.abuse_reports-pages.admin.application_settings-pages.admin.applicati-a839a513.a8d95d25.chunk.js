(this.webpackJsonp=this.webpackJsonp||[]).push([[2],{qPgm:function(e,t,r){"use strict";r("EWC9"),r("S26F"),r("TZoF"),r("pBsb");var a=r("2ibD"),s=r("3twG"),n=r("XRO8"),i=r("/lV4");function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const l={DEFAULT_PER_PAGE:20,groupsPath:"/api/:version/groups.json",groupPath:"/api/:version/groups/:id",groupMembersPath:"/api/:version/groups/:id/members",groupMilestonesPath:"/api/:version/groups/:id/milestones",subgroupsPath:"/api/:version/groups/:id/subgroups",namespacesPath:"/api/:version/namespaces.json",groupInvitationsPath:"/api/:version/groups/:id/invitations",groupPackagesPath:"/api/:version/groups/:id/packages",projectPackagesPath:"/api/:version/projects/:id/packages",projectPackagePath:"/api/:version/projects/:id/packages/:package_id",groupProjectsPath:"/api/:version/groups/:id/projects.json",projectsPath:"/api/:version/projects.json",projectPath:"/api/:version/projects/:id",forkedProjectsPath:"/api/:version/projects/:id/forks",projectLabelsPath:"/:namespace_path/:project_path/-/labels",projectFileSchemaPath:"/:namespace_path/:project_path/-/schema/:ref/:filename",projectUsersPath:"/api/:version/projects/:id/users",projectInvitationsPath:"/api/:version/projects/:id/invitations",projectMembersPath:"/api/:version/projects/:id/members",projectMergeRequestsPath:"/api/:version/projects/:id/merge_requests",projectMergeRequestPath:"/api/:version/projects/:id/merge_requests/:mrid",projectMergeRequestChangesPath:"/api/:version/projects/:id/merge_requests/:mrid/changes",projectMergeRequestVersionsPath:"/api/:version/projects/:id/merge_requests/:mrid/versions",projectRunnersPath:"/api/:version/projects/:id/runners",projectProtectedBranchesPath:"/api/:version/projects/:id/protected_branches",projectSearchPath:"/api/:version/projects/:id/search",projectMilestonesPath:"/api/:version/projects/:id/milestones",projectIssuePath:"/api/:version/projects/:id/issues/:issue_iid",mergeRequestsPath:"/api/:version/merge_requests",groupLabelsPath:"/groups/:namespace_path/-/labels",issuableTemplatePath:"/:namespace_path/:project_path/templates/:type/:key",issuableTemplatesPath:"/:namespace_path/:project_path/templates/:type",projectTemplatePath:"/api/:version/projects/:id/templates/:type/:key",projectTemplatesPath:"/api/:version/projects/:id/templates/:type",userCountsPath:"/api/:version/user_counts",usersPath:"/api/:version/users.json",userPath:"/api/:version/users/:id",userStatusPath:"/api/:version/users/:id/status",userProjectsPath:"/api/:version/users/:id/projects",userPostStatusPath:"/api/:version/user/status",commitPath:"/api/:version/projects/:id/repository/commits/:sha",commitsPath:"/api/:version/projects/:id/repository/commits",applySuggestionPath:"/api/:version/suggestions/:id/apply",applySuggestionBatchPath:"/api/:version/suggestions/batch_apply",commitPipelinesPath:"/:project_id/commit/:sha/pipelines",branchSinglePath:"/api/:version/projects/:id/repository/branches/:branch",createBranchPath:"/api/:version/projects/:id/repository/branches",releasesPath:"/api/:version/projects/:id/releases",releasePath:"/api/:version/projects/:id/releases/:tag_name",releaseLinksPath:"/api/:version/projects/:id/releases/:tag_name/assets/links",releaseLinkPath:"/api/:version/projects/:id/releases/:tag_name/assets/links/:link_id",mergeRequestsPipeline:"/api/:version/projects/:id/merge_requests/:merge_request_iid/pipelines",adminStatisticsPath:"/api/:version/application/statistics",pipelineJobsPath:"/api/:version/projects/:id/pipelines/:pipeline_id/jobs",pipelineSinglePath:"/api/:version/projects/:id/pipelines/:pipeline_id",pipelinesPath:"/api/:version/projects/:id/pipelines/",createPipelinePath:"/api/:version/projects/:id/pipeline",environmentsPath:"/api/:version/projects/:id/environments",contextCommitsPath:"/api/:version/projects/:id/merge_requests/:merge_request_iid/context_commits",rawFilePath:"/api/:version/projects/:id/repository/files/:path/raw",issuePath:"/api/:version/projects/:id/issues/:issue_iid",tagsPath:"/api/:version/projects/:id/repository/tags",freezePeriodsPath:"/api/:version/projects/:id/freeze_periods",usageDataIncrementCounterPath:"/api/:version/usage_data/increment_counter",usageDataIncrementUniqueUsersPath:"/api/:version/usage_data/increment_unique_users",featureFlagUserLists:"/api/:version/projects/:id/feature_flags_user_lists",featureFlagUserList:"/api/:version/projects/:id/feature_flags_user_lists/:list_iid",billableGroupMembersPath:"/api/:version/groups/:id/billable_members",containerRegistryDetailsPath:"/api/:version/registry/repositories/:id/",group(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){};const r=l.buildUrl(l.groupPath).replace(":id",e);return a.a.get(r).then((function(e){let{data:r}=e;return t(r),r}))},groupPackages(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=l.buildUrl(this.groupPackagesPath).replace(":id",e);return a.a.get(r,t)},projectPackages(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=l.buildUrl(this.projectPackagesPath).replace(":id",e);return a.a.get(r,t)},buildProjectPackageUrl(e,t){return l.buildUrl(this.projectPackagePath).replace(":id",e).replace(":package_id",t)},projectPackage(e,t){const r=this.buildProjectPackageUrl(e,t);return a.a.get(r)},deleteProjectPackage(e,t){const r=this.buildProjectPackageUrl(e,t);return a.a.delete(r)},containerRegistryDetails(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=l.buildUrl(this.containerRegistryDetailsPath).replace(":id",e);return a.a.get(r,t)},groupMembers(e,t){const r=l.buildUrl(this.groupMembersPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:p({per_page:20},t)})},addGroupMembersByUserId(e,t){const r=l.buildUrl(this.groupMembersPath).replace(":id",encodeURIComponent(e));return a.a.post(r,t)},inviteGroupMembersByEmail(e,t){const r=l.buildUrl(this.groupInvitationsPath).replace(":id",encodeURIComponent(e));return a.a.post(r,t)},groupMilestones(e,t){const r=l.buildUrl(this.groupMilestonesPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:p({per_page:20},t)})},groups(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){};const s=l.buildUrl(l.groupsPath);return a.a.get(s,{params:p({search:e,per_page:20},t)}).then((function(e){let{data:t}=e;return r(t),t}))},groupLabels(e){const t=l.buildUrl(l.groupLabelsPath).replace(":namespace_path",e);return a.a.get(t).then((function(e){let{data:t}=e;return t}))},namespaces(e,t){const r=l.buildUrl(l.namespacesPath);return a.a.get(r,{params:{search:e,per_page:20}}).then((function(e){let{data:r}=e;return t(r)}))},projects(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){};const s=l.buildUrl(l.projectsPath),n={search:e,per_page:20,simple:!0};return gon.current_user_id&&(n.membership=!0),a.a.get(s,{params:Object.assign(n,t)}).then((function(e){let{data:t,headers:a}=e;return r(t),{data:t,headers:a}}))},projectUsers(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=l.buildUrl(this.projectUsersPath).replace(":id",encodeURIComponent(e));return a.a.get(s,{params:p({search:t,per_page:20},r)}).then((function(e){let{data:t}=e;return t}))},addProjectMembersByUserId(e,t){const r=l.buildUrl(this.projectMembersPath).replace(":id",encodeURIComponent(e));return a.a.post(r,t)},inviteProjectMembersByEmail(e,t){const r=l.buildUrl(this.projectInvitationsPath).replace(":id",encodeURIComponent(e));return a.a.post(r,t)},project(e){const t=l.buildUrl(l.projectPath).replace(":id",encodeURIComponent(e));return a.a.get(t)},updateProject(e,t){const r=l.buildUrl(l.projectPath).replace(":id",encodeURIComponent(e));return a.a.put(r,t)},projectForks(e,t){const r=l.buildUrl(l.forkedProjectsPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:t})},projectMergeRequests(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=l.buildUrl(l.projectMergeRequestsPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:t})},createProjectMergeRequest(e,t){const r=l.buildUrl(l.projectMergeRequestsPath).replace(":id",encodeURIComponent(e));return a.a.post(r,t)},projectMergeRequest(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=l.buildUrl(l.projectMergeRequestPath).replace(":id",encodeURIComponent(e)).replace(":mrid",t);return a.a.get(s,{params:r})},projectMergeRequestChanges(e,t){const r=l.buildUrl(l.projectMergeRequestChangesPath).replace(":id",encodeURIComponent(e)).replace(":mrid",t);return a.a.get(r)},projectMergeRequestVersions(e,t){const r=l.buildUrl(l.projectMergeRequestVersionsPath).replace(":id",encodeURIComponent(e)).replace(":mrid",t);return a.a.get(r)},projectRunners(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=l.buildUrl(l.projectRunnersPath).replace(":id",encodeURIComponent(e));return a.a.get(r,t)},projectProtectedBranches(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const r=l.buildUrl(l.projectProtectedBranchesPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:{search:t,per_page:20}}).then((function(e){let{data:t}=e;return t}))},projectSearch(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=l.buildUrl(l.projectSearchPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:{search:t.search,scope:t.scope}})},projectMilestones(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=l.buildUrl(l.projectMilestonesPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:t})},addProjectIssueAsTodo(e,t){const r=l.buildUrl(l.projectIssuePath).replace(":id",encodeURIComponent(e)).replace(":issue_iid",encodeURIComponent(t));return a.a.post("".concat(r,"/todo"))},mergeRequests(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=l.buildUrl(l.mergeRequestsPath);return a.a.get(t,{params:e})},newLabel(e,t,r,s){let n;return n=t?l.buildUrl(l.projectLabelsPath).replace(":namespace_path",e).replace(":project_path",t):l.buildUrl(l.groupLabelsPath).replace(":namespace_path",e),a.a.post(n,{label:r}).then((function(e){return s(e.data)})).catch((function(e){return s(e.response.data)}))},groupProjects(e,t,r,s){const o=l.buildUrl(l.groupProjectsPath).replace(":id",e),c={search:t,per_page:20};return a.a.get(o,{params:p(p({},c),r)}).then((function(e){let{data:t}=e;return s?s(t):t})).catch((function(){Object(n.c)(Object(i.a)("Something went wrong while fetching projects")),s&&s()}))},commit(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=l.buildUrl(this.commitPath).replace(":id",encodeURIComponent(e)).replace(":sha",encodeURIComponent(t));return a.a.get(s,{params:r})},commitMultiple(e,t){const r=l.buildUrl(l.commitsPath).replace(":id",encodeURIComponent(e));return a.a.post(r,JSON.stringify(t),{headers:{"Content-Type":"application/json; charset=utf-8"}})},applySuggestion(e,t){const r=l.buildUrl(l.applySuggestionPath).replace(":id",encodeURIComponent(e));return a.a.put(r,{commit_message:t})},applySuggestionBatch(e){const t=l.buildUrl(l.applySuggestionBatchPath);return a.a.put(t,{ids:e})},commitPipelines(e,t){const r=e.split("/").map((function(e){return encodeURIComponent(e)})).join("/"),s=l.buildUrl(l.commitPipelinesPath).replace(":project_id",r).replace(":sha",encodeURIComponent(t));return a.a.get(s)},branchSingle(e,t){const r=l.buildUrl(l.branchSinglePath).replace(":id",encodeURIComponent(e)).replace(":branch",encodeURIComponent(t));return a.a.get(r)},projectTemplate(e,t,r,s,n){const i=l.buildUrl(this.projectTemplatePath).replace(":id",encodeURIComponent(e)).replace(":type",t).replace(":key",encodeURIComponent(r));return a.a.get(i,{params:s}).then((function(e){return n&&n(e.data),e}))},projectTemplates(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},s=arguments.length>3?arguments[3]:void 0;const n=l.buildUrl(this.projectTemplatesPath).replace(":id",encodeURIComponent(e)).replace(":type",t);return a.a.get(n,{params:r}).then((function(e){return s&&s(e.data),e}))},issueTemplate(e,t,r,s,n){const i=this.buildIssueTemplateUrl(l.issuableTemplatePath,s,t,e).replace(":key",encodeURIComponent(r));return a.a.get(i).then((function(e){let{data:t}=e;return n(null,t)})).catch(n)},issueTemplates(e,t,r,s){const n=this.buildIssueTemplateUrl(l.issuableTemplatesPath,r,t,e);return a.a.get(n).then((function(e){let{data:t}=e;return s(null,t)})).catch(s)},buildIssueTemplateUrl:(e,t,r,a)=>l.buildUrl(e).replace(":type",t).replace(":project_path",r).replace(":namespace_path",a),users(e,t){const r=l.buildUrl(this.usersPath);return a.a.get(r,{params:p({search:e,per_page:20},t)})},user(e,t){const r=l.buildUrl(this.userPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:t})},userCounts(){const e=l.buildUrl(this.userCountsPath);return a.a.get(e)},userStatus(e,t){const r=l.buildUrl(this.userStatusPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:t})},userProjects(e,t,r,s){const o=l.buildUrl(l.userProjectsPath).replace(":id",e),c={search:t,per_page:20};return a.a.get(o,{params:p(p({},c),r)}).then((function(e){let{data:t}=e;return s(t)})).catch((function(){return Object(n.c)(Object(i.a)("Something went wrong while fetching projects"))}))},branches(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=l.buildUrl(this.createBranchPath).replace(":id",encodeURIComponent(e));return a.a.get(s,{params:p({search:t,per_page:20},r)})},createBranch(e,t){let{ref:r,branch:s}=t;const n=l.buildUrl(this.createBranchPath).replace(":id",encodeURIComponent(e));return a.a.post(n,{ref:r,branch:s})},postUserStatus(e){let{emoji:t,message:r,availability:s}=e;const n=l.buildUrl(this.userPostStatusPath);return a.a.put(n,{emoji:t,message:r,availability:s})},postMergeRequestPipeline(e,t){let{mergeRequestId:r}=t;const s=l.buildUrl(this.mergeRequestsPipeline).replace(":id",encodeURIComponent(e)).replace(":merge_request_iid",r);return a.a.post(s)},releases(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=l.buildUrl(this.releasesPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:p({per_page:20},t)})},release(e,t){const r=l.buildUrl(this.releasePath).replace(":id",encodeURIComponent(e)).replace(":tag_name",encodeURIComponent(t));return a.a.get(r)},createRelease(e,t){const r=l.buildUrl(this.releasesPath).replace(":id",encodeURIComponent(e));return a.a.post(r,t)},updateRelease(e,t,r){const s=l.buildUrl(this.releasePath).replace(":id",encodeURIComponent(e)).replace(":tag_name",encodeURIComponent(t));return a.a.put(s,r)},createReleaseLink(e,t,r){const s=l.buildUrl(this.releaseLinksPath).replace(":id",encodeURIComponent(e)).replace(":tag_name",encodeURIComponent(t));return a.a.post(s,r)},deleteReleaseLink(e,t,r){const s=l.buildUrl(this.releaseLinkPath).replace(":id",encodeURIComponent(e)).replace(":tag_name",encodeURIComponent(t)).replace(":link_id",encodeURIComponent(r));return a.a.delete(s)},adminStatistics(){const e=l.buildUrl(this.adminStatisticsPath);return a.a.get(e)},pipelineSingle(e,t){const r=l.buildUrl(this.pipelineSinglePath).replace(":id",encodeURIComponent(e)).replace(":pipeline_id",encodeURIComponent(t));return a.a.get(r)},pipelineJobs(e,t,r){const s=l.buildUrl(this.pipelineJobsPath).replace(":id",encodeURIComponent(e)).replace(":pipeline_id",encodeURIComponent(t));return a.a.get(s,{params:r})},pipelines(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=l.buildUrl(this.pipelinesPath).replace(":id",encodeURIComponent(e));return a.a.get(r,{params:t})},createPipeline(e,t){const r=l.buildUrl(this.createPipelinePath).replace(":id",encodeURIComponent(e));return a.a.post(r,t,{headers:{"Content-Type":"application/json"}})},environments(e){const t=l.buildUrl(this.environmentsPath).replace(":id",encodeURIComponent(e));return a.a.get(t)},createContextCommits(e,t,r){const s=l.buildUrl(this.contextCommitsPath).replace(":id",encodeURIComponent(e)).replace(":merge_request_iid",t);return a.a.post(s,r)},allContextCommits(e,t){const r=l.buildUrl(this.contextCommitsPath).replace(":id",encodeURIComponent(e)).replace(":merge_request_iid",t);return a.a.get(r)},removeContextCommits(e,t,r){const s=l.buildUrl(this.contextCommitsPath).replace(":id",e).replace(":merge_request_iid",t);return a.a.delete(s,{data:r})},getRawFile(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{ref:"master"};const s=l.buildUrl(this.rawFilePath).replace(":id",encodeURIComponent(e)).replace(":path",encodeURIComponent(t));return a.a.get(s,{params:r})},updateIssue(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=l.buildUrl(l.issuePath).replace(":id",encodeURIComponent(e)).replace(":issue_iid",encodeURIComponent(t));return a.a.put(s,r)},updateMergeRequest(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=l.buildUrl(l.projectMergeRequestPath).replace(":id",encodeURIComponent(e)).replace(":mrid",encodeURIComponent(t));return a.a.put(s,r)},tags(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=l.buildUrl(this.tagsPath).replace(":id",encodeURIComponent(e));return a.a.get(s,{params:p({search:t,per_page:20},r)})},freezePeriods(e){const t=l.buildUrl(this.freezePeriodsPath).replace(":id",encodeURIComponent(e));return a.a.get(t)},createFreezePeriod(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=l.buildUrl(this.freezePeriodsPath).replace(":id",encodeURIComponent(e));return a.a.post(r,t)},trackRedisCounterEvent(e){var t;if(!(null===(t=gon.features)||void 0===t?void 0:t.usageDataApi))return null;const r=l.buildUrl(this.usageDataIncrementCounterPath);return a.a.post(r,{event:e},{headers:{"Content-Type":"application/json"}})},trackRedisHllUserEvent(e){var t;if(!(null===(t=gon.features)||void 0===t?void 0:t.usageDataApi))return null;const r=l.buildUrl(this.usageDataIncrementUniqueUsersPath);return a.a.post(r,{event:e},{headers:{"Content-Type":"application/json"}})},buildUrl:e=>Object(s.n)(gon.relative_url_root||"",e.replace(":version",gon.api_version)),fetchFeatureFlagUserLists(e,t){const r=l.buildUrl(this.featureFlagUserLists).replace(":id",e);return a.a.get(r,{params:{page:t}})},searchFeatureFlagUserLists(e,t){const r=l.buildUrl(this.featureFlagUserLists).replace(":id",e);return a.a.get(r,{params:{search:t}})},createFeatureFlagUserList(e,t){const r=l.buildUrl(this.featureFlagUserLists).replace(":id",e);return a.a.post(r,t)},fetchFeatureFlagUserList(e,t){const r=l.buildUrl(this.featureFlagUserList).replace(":id",e).replace(":list_iid",t);return a.a.get(r)},updateFeatureFlagUserList(e,t){const r=l.buildUrl(this.featureFlagUserList).replace(":id",e).replace(":list_iid",t.iid);return a.a.put(r,t)},deleteFeatureFlagUserList(e,t){const r=l.buildUrl(this.featureFlagUserList).replace(":id",e).replace(":list_iid",t);return a.a.delete(r)},fetchBillableGroupMembersList(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){};const s=l.buildUrl(this.billableGroupMembersPath).replace(":id",e),n={per_page:20,page:1},i=t;return i.search||(i.search=void 0),a.a.get(s,{params:p(p({},n),i)}).then((function(e){let{data:t,headers:a}=e;return r(t),{data:t,headers:a}}))}};t.a=l}}]);
//# sourceMappingURL=commons-pages.admin-pages.admin.abuse_reports-pages.admin.application_settings-pages.admin.applicati-a839a513.a8d95d25.chunk.js.map